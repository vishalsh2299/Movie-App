{"version":3,"sources":["components/Config.js","_actions/user_actions.js","_actions/types.js","hoc/auth.js","components/views/LandingPage/Sections/MainImage.js","components/views/LandingPage/Sections/GridCard.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/views/MovieDetailPage/Sections/Favorite.js","components/views/MovieDetailPage/Sections/LikeDislikes.js","components/views/MovieDetailPage/Sections/SingleComment.js","components/views/MovieDetailPage/Sections/ReplyComment.js","components/views/MovieDetailPage/Sections/Comments.js","components/views/MovieDetailPage/MovieDetailPage.js","components/views/FavoritePage/FavoritePage.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["API_KEY","API_URL","IMAGE_URL","auth","type","payload","axios","get","then","response","data","SpecificComponent","option","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","isAuth","isAdmin","history","push","Title","Typography","MainImage","style","background","image","height","backgroundSize","backgroundPosition","width","position","maxWidth","bottom","marginLeft","color","level","title","fontSize","text","GridCard","actor","lg","md","xs","alt","src","href","movieId","LandingPage","useState","Movies","setMovies","CurrentPage","setCurrentPage","endpoint","fetchMovies","path","fetch","json","results","page","margin","backdrop_path","original_title","overview","gutter","map","movie","index","Fragment","key","poster_path","character","id","display","justifyContent","onClick","withRouter","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","post","loginUser","loginSuccess","window","setItem","userId","removeItem","catch","err","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","className","Item","prefix","placeholder","value","onChange","onBlur","border","padding","borderRadius","checked","float","htmlType","minWidth","disabled","formItemLayout","labelCol","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","lastName","name","confirmPassword","oneOf","lastname","moment","unix","registerUser","success","alert","errmsg","label","hasFeedback","validateStatus","LeftMenu","mode","userData","status","NavBar","visible","setVisible","zIndex","flexDirection","alignItems","justifyItems","CameraTwoTone","marginRight","placement","closable","onClose","Footer","Favorite","FavoriteNumber","setFavoriteNumber","Favorited","setFavorited","variable","userFrom","movieTitle","movieInfo","movieImage","movieRunTime","runtime","res","favoriteNumber","favorited","class","aria-label","aria-pressed","StarFilled","StarOutlined","LikeDislikes","Likes","setLikes","Dislikes","setDislikes","LikeAction","setLikeAction","DislikeAction","setDislikeAction","video","videoId","commentId","Axios","likes","length","like","dislikes","dislike","theme","paddingLeft","cursor","TextArea","Input","SingleComment","CommentValue","setCommentValue","OpenReply","setOpenReply","e","preventDefault","variables","writer","_id","responseTo","comment","content","refreshFunction","result","actions","author","avatar","currentTarget","ReplyComment","parentCommentId","ChildCommentNumber","setChildCommentNumber","OpenReplyComments","setOpenReplyComments","commentNumber","CommentLists","Comments","Comment","setComment","console","log","MovieDetailPage","match","params","Movie","setMovie","Crews","setCrews","ActorToggle","setActorToggle","setCommentLists","LoadingForMovie","setLoadingForMovie","LoadingForCasts","setLoadingForCasts","endpointForMovieInfo","fetchDetailInfo","comments","cast","bordered","release_date","revenue","vote_average","vote_count","popularity","crew","profile_path","newComment","concat","FavoritePage","FavoritedMovies","setFavoritedMovies","Loading","setLoading","fetchFavoredMovie","favorites","renderTableBody","favorite","onClickRemove","App","fallback","paddingTop","minHeight","exact","component","Auth","LoginPage","Boolean","location","hostname","rootReducer","combineReducers","action","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0d081a17.chunk.js","sourcesContent":["//SERVER ROUTES\r\nexport const USER_SERVER = \"/api/users\";\r\n\r\nexport const API_KEY = \"63f97296fe930d8ce6bd4842be7416e0\";\r\nexport const API_URL = \"https://api.themoviedb.org/3/\";\r\nexport const IMAGE_URL = \"http://image.tmdb.org/t/p/\";\r\n","import axios from 'axios';\r\nimport {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n} from './types';\r\nimport { USER_SERVER } from '../components/Config.js';\r\n\r\nexport function registerUser(dataToSubmit){\r\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\r\n        .then(response => response.data);\r\n    \r\n    return {\r\n        type: REGISTER_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function loginUser(dataToSubmit){\r\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\r\n                .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGIN_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function auth(){\r\n    const request = axios.get(`${USER_SERVER}/auth`)\r\n    .then(response => response.data);\r\n\r\n    return {\r\n        type: AUTH_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport function logoutUser(){\r\n    const request = axios.get(`${USER_SERVER}/logout`)\r\n    .then(response => response.data);\r\n\r\n    return {\r\n        type: LOGOUT_USER,\r\n        payload: request\r\n    }\r\n}\r\n\r\n","export const LOGIN_USER = 'login_user';\r\nexport const REGISTER_USER = 'register_user';\r\nexport const AUTH_USER = 'auth_user';\r\nexport const LOGOUT_USER = 'logout_user';\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { auth } from '../_actions/user_actions';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nexport default function (SpecificComponent, option, adminRoute = null) {\r\n    function AuthenticationCheck(props) {\r\n\r\n        let user = useSelector(state => state.user);\r\n        const dispatch = useDispatch();\r\n\r\n        useEffect(() => {\r\n            //To know my current status, send Auth request \r\n            dispatch(auth()).then(response => {\r\n                //Not Loggined in Status \r\n                if (!response.payload.isAuth) {\r\n                    if (option) {\r\n                        props.history.push('/login')\r\n                    }\r\n                    //Loggined in Status \r\n                } else {\r\n                    //supposed to be Admin page, but not admin person wants to go inside\r\n                    if (adminRoute && !response.payload.isAdmin) {\r\n                        props.history.push('/')\r\n                    }\r\n                    //Logged in Status, but Try to go into log in page \r\n                    else {\r\n                        if (option === false) {\r\n                            props.history.push('/')\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n\r\n        }, [])\r\n\r\n        return (\r\n            <SpecificComponent {...props} user={user} />\r\n        )\r\n    }\r\n    return AuthenticationCheck\r\n}\r\n\r\n\r\n","import React from \"react\";\r\n\r\nimport { Typography } from \"antd\";\r\nconst { Title } = Typography;\r\n\r\nfunction MainImage(props) {\r\n  return (\r\n    <div\r\n      style={{\r\n        background: `linear-gradient(to bottom , rgba(0,0,0,0)\r\n        39%, rgba(0,0,0,0) 41% ,\r\n        rgba(0,0,0,0.65) 100%),\r\n        url('${props.image}'), #1c1c1c`,\r\n        height: \"500px\",\r\n        backgroundSize: \"100%, cover\",\r\n        backgroundPosition: \"center, center\",\r\n        width: \"100%\",\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      <div>\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            maxWidth: \"500px\",\r\n            bottom: \"2rem\",\r\n            marginLeft: \"2rem\",\r\n          }}\r\n        >\r\n          <Title style={{ color: \"white\" }} level={2}>\r\n            {\" \"}\r\n            {props.title}\r\n          </Title>\r\n          <p style={{ color: \"white\", fontSize: \"1rem\" }}>{props.text}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainImage;\r\n","import React from \"react\";\r\nimport { Col } from \"antd\";\r\n\r\nfunction GridCard(props) {\r\n  if (props.actor) {\r\n    return (\r\n      <div>\r\n        <Col lg={6} md={8} xs={24}>\r\n          <div style={{ position: \"relative\" }}>\r\n            {/* make this movieId route in App.js also */}\r\n\r\n            <img\r\n              style={{ width: \"100%\", height: \"320px\" }}\r\n              alt={props.alt}\r\n              src={props.image}\r\n            />\r\n          </div>\r\n        </Col>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <Col lg={6} md={8} xs={24}>\r\n        <div style={{ position: \"relative\" }}>\r\n          {/* make this movieId route in App.js also */}\r\n          <a href={`/movie/${props.movieId}`}>\r\n            <img\r\n              style={{ width: \"100%\", height: \"320px\" }}\r\n              alt={props.alt}\r\n              src={props.image}\r\n            />\r\n          </a>\r\n        </div>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GridCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { API_URL, API_KEY, IMAGE_URL } from \"../../Config\";\r\nimport MainImage from \"./Sections/MainImage\";\r\nimport GridCard from \"./Sections/GridCard\";\r\n\r\nimport { Typography, Row } from \"antd\";\r\nconst { Title } = Typography;\r\n\r\nfunction LandingPage() {\r\n  const [Movies, setMovies] = useState([]);\r\n  const [CurrentPage, setCurrentPage] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n    fetchMovies(endpoint);\r\n  }, []);\r\n\r\n  const fetchMovies = (path) => {\r\n    fetch(path)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        //console.log(response);\r\n        setMovies([...Movies, ...response.results]); // we used array so that when we click load more we can concat the new page in that part instead of replacing it\r\n        setCurrentPage(response.page);\r\n      });\r\n  };\r\n\r\n  const handleClick = () => {\r\n    // here we want to add the pages in the fetch API that we used ( US&page=2)\r\n    let endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${\r\n      CurrentPage + 1\r\n    }`;\r\n    fetchMovies(endpoint);\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", margin: \"0\" }}>\r\n      {/* Movie Main Image ... w1280 is wide 1280 size of image \r\n      and we are doing && as rendering speed is faster so to ensure the first we fetch*/}\r\n      {Movies[0] && (\r\n        <MainImage\r\n          image={`${IMAGE_URL}w1280${\r\n            Movies[0].backdrop_path && Movies[0].backdrop_path\r\n          }`}\r\n          title={Movies[0].original_title}\r\n          text={Movies[0].overview}\r\n        />\r\n      )}\r\n\r\n      {/* BODY */}\r\n      <div style={{ width: \"85%\", margin: \"1rem auto\" }}>\r\n        <Title level={2}> Movies by latest</Title>\r\n        <hr />\r\n\r\n        {/* Grid Cards */}\r\n        <Row gutter={[16, 16]}>\r\n          {Movies &&\r\n            Movies.map((movie, index) => (\r\n              <React.Fragment key={index}>\r\n                <GridCard\r\n                  image={\r\n                    movie.poster_path && `${IMAGE_URL}w500${movie.poster_path}`\r\n                  }\r\n                  alt={movie.character}\r\n                  movieId={movie.id}\r\n                />\r\n              </React.Fragment>\r\n            ))}\r\n        </Row>\r\n\r\n        {/* Load more Button */}\r\n        <br />\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <button onClick={handleClick}>Load More</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","import React, { useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { loginUser } from \"../../../_actions/user_actions\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Form, Icon, Input, Button, Checkbox, Typography } from \"antd\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction LoginPage(props) {\r\n  const dispatch = useDispatch();\r\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\r\n\r\n  const [formErrorMessage, setFormErrorMessage] = useState(\"\");\r\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked);\r\n\r\n  const handleRememberMe = () => {\r\n    setRememberMe(!rememberMe);\r\n  };\r\n\r\n  const initialEmail = localStorage.getItem(\"rememberMe\")\r\n    ? localStorage.getItem(\"rememberMe\")\r\n    : \"\";\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: initialEmail,\r\n        password: \"\",\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email(\"Email is invalid\")\r\n          .required(\"Email is required\"),\r\n        password: Yup.string()\r\n          .min(6, \"Password must be at least 6 characters\")\r\n          .required(\"Password is required\"),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n          };\r\n\r\n          dispatch(loginUser(dataToSubmit))\r\n            .then((response) => {\r\n              if (response.payload.loginSuccess) {\r\n                window.localStorage.setItem(\"userId\", response.payload.userId);\r\n                if (rememberMe === true) {\r\n                  window.localStorage.setItem(\"rememberMe\", values.id);\r\n                } else {\r\n                  localStorage.removeItem(\"rememberMe\");\r\n                }\r\n                props.history.push(\"/\");\r\n              } else {\r\n                setFormErrorMessage(\"Check out your Account or Password again\");\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              setFormErrorMessage(\"Check out your Account or Password again\");\r\n              setTimeout(() => {\r\n                setFormErrorMessage(\"\");\r\n              }, 3000);\r\n            });\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {(props) => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          //dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          //handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n            <Title level={2}>Log In</Title>\r\n            <form onSubmit={handleSubmit} style={{ width: \"350px\" }}>\r\n              <Form.Item required>\r\n                <Input\r\n                  id=\"email\"\r\n                  prefix={\r\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  placeholder=\"Enter your email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required>\r\n                <Input\r\n                  id=\"password\"\r\n                  prefix={\r\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n                  }\r\n                  placeholder=\"Enter your password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              {formErrorMessage && (\r\n                <label>\r\n                  <p\r\n                    style={{\r\n                      color: \"#ff0000bf\",\r\n                      fontSize: \"0.7rem\",\r\n                      border: \"1px solid\",\r\n                      padding: \"1rem\",\r\n                      borderRadius: \"10px\",\r\n                    }}\r\n                  >\r\n                    {formErrorMessage}\r\n                  </p>\r\n                </label>\r\n              )}\r\n\r\n              <Form.Item>\r\n                <Checkbox\r\n                  id=\"rememberMe\"\r\n                  onChange={handleRememberMe}\r\n                  checked={rememberMe}\r\n                >\r\n                  Remember me\r\n                </Checkbox>\r\n                <a\r\n                  className=\"login-form-forgot\"\r\n                  href=\"/reset_user\"\r\n                  style={{ float: \"right\" }}\r\n                >\r\n                  forgot password\r\n                </a>\r\n                <div>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"login-form-button\"\r\n                    style={{ minWidth: \"100%\" }}\r\n                    disabled={isSubmitting}\r\n                    onSubmit={handleSubmit}\r\n                  >\r\n                    Log in\r\n                  </Button>\r\n                </div>\r\n                Or <a href=\"/register\">register now!</a>\r\n              </Form.Item>\r\n            </form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginPage);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { registerUser } from \"../../../_actions/user_actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { Form, Input, Button } from \"antd\";\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 8 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 16 },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nfunction RegisterPage(props) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        email: \"\",\r\n        lastName: \"\",\r\n        name: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n      }}\r\n      validationSchema={Yup.object().shape({\r\n        name: Yup.string().required(\"Name is required\"),\r\n        lastName: Yup.string().required(\"Last Name is required\"),\r\n        email: Yup.string()\r\n          .email(\"Email is invalid\")\r\n          .required(\"Email is required\"),\r\n        password: Yup.string()\r\n          .min(6, \"Password must be at least 6 characters\")\r\n          .required(\"Password is required\"),\r\n        confirmPassword: Yup.string()\r\n          .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n          .required(\"Confirm Password is required\"),\r\n      })}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          let dataToSubmit = {\r\n            email: values.email,\r\n            password: values.password,\r\n            name: values.name,\r\n            lastname: values.lastname,\r\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`,\r\n          };\r\n\r\n          dispatch(registerUser(dataToSubmit)).then((response) => {\r\n            if (response.payload.success) {\r\n              props.history.push(\"/login\");\r\n            } else {\r\n              alert(response.payload.err.errmsg);\r\n            }\r\n          });\r\n\r\n          setSubmitting(false);\r\n        }, 500);\r\n      }}\r\n    >\r\n      {(props) => {\r\n        const {\r\n          values,\r\n          touched,\r\n          errors,\r\n          //dirty,\r\n          isSubmitting,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          //handleReset,\r\n        } = props;\r\n        return (\r\n          <div className=\"app\">\r\n            <h2>Sign up</h2>\r\n            <Form\r\n              style={{ minWidth: \"375px\" }}\r\n              {...formItemLayout}\r\n              onSubmit={handleSubmit}\r\n            >\r\n              <Form.Item required label=\"Name\">\r\n                <Input\r\n                  id=\"name\"\r\n                  placeholder=\"Enter your name\"\r\n                  type=\"text\"\r\n                  value={values.name}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.name && touched.name\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.name && touched.name && (\r\n                  <div className=\"input-feedback\">{errors.name}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Last Name\">\r\n                <Input\r\n                  id=\"lastName\"\r\n                  placeholder=\"Enter your Last Name\"\r\n                  type=\"text\"\r\n                  value={values.lastName}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.lastName && touched.lastName\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.lastName && touched.lastName && (\r\n                  <div className=\"input-feedback\">{errors.lastName}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                required\r\n                label=\"Email\"\r\n                hasFeedback\r\n                validateStatus={\r\n                  errors.email && touched.email ? \"error\" : \"success\"\r\n                }\r\n              >\r\n                <Input\r\n                  id=\"email\"\r\n                  placeholder=\"Enter your Email\"\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.email && touched.email\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.email && touched.email && (\r\n                  <div className=\"input-feedback\">{errors.email}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                required\r\n                label=\"Password\"\r\n                hasFeedback\r\n                validateStatus={\r\n                  errors.password && touched.password ? \"error\" : \"success\"\r\n                }\r\n              >\r\n                <Input\r\n                  id=\"password\"\r\n                  placeholder=\"Enter your password\"\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.password && touched.password\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.password && touched.password && (\r\n                  <div className=\"input-feedback\">{errors.password}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item required label=\"Confirm\" hasFeedback>\r\n                <Input\r\n                  id=\"confirmPassword\"\r\n                  placeholder=\"Enter your confirmPassword\"\r\n                  type=\"password\"\r\n                  value={values.confirmPassword}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  className={\r\n                    errors.confirmPassword && touched.confirmPassword\r\n                      ? \"text-input error\"\r\n                      : \"text-input\"\r\n                  }\r\n                />\r\n                {errors.confirmPassword && touched.confirmPassword && (\r\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item {...tailFormItemLayout}>\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  type=\"primary\"\r\n                  disabled={isSubmitting}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </div>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n","import React from \"react\";\r\nimport { Menu } from \"antd\";\r\n\r\nfunction LeftMenu(props) {\r\n  return (\r\n    <Menu mode={props.mode}>\r\n      <Menu.Item key=\"favorite\">\r\n        <a href=\"/favorite\">Favorite</a>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default LeftMenu;\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { Menu } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { USER_SERVER } from \"../../../Config\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction RightMenu(props) {\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const logoutHandler = () => {\r\n    axios.get(`${USER_SERVER}/logout`).then((response) => {\r\n      if (response.status === 200) {\r\n        props.history.push(\"/login\");\r\n      } else {\r\n        alert(\"Log Out Failed\");\r\n      }\r\n    });\r\n  };\r\n\r\n  if (user.userData && !user.userData.isAuth) {\r\n    return (\r\n      <Menu mode={props.mode}>\r\n        <Menu.Item key=\"mail\">\r\n          <a href=\"/login\">SignIn</a>\r\n        </Menu.Item>\r\n        <Menu.Item key=\"app\">\r\n          <a href=\"/register\">SignUp</a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  } else {\r\n    return (\r\n      <Menu mode={props.mode}>\r\n        <Menu.Item key=\"logout\">\r\n          <a onClick={logoutHandler}>Logout</a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(RightMenu);\r\n","import React, { useState } from \"react\";\r\nimport LeftMenu from \"./Sections/LeftMenu\";\r\nimport RightMenu from \"./Sections/RightMenu\";\r\nimport { Drawer, Button, Icon } from \"antd\";\r\nimport \"./Sections/Navbar.css\";\r\n\r\nimport { CameraTwoTone } from \"@ant-design/icons\";\r\n\r\nfunction NavBar() {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const showDrawer = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const onClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <nav\r\n      className=\"menu\"\r\n      style={{ position: \"fixed\", zIndex: 5, width: \"100%\" }}\r\n    >\r\n      <div\r\n        className=\"menu__logo\"\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          alignItems: \"center\",\r\n          justifyItems: \"center\",\r\n        }}\r\n      >\r\n        <CameraTwoTone style={{ fontSize: \"30px\", marginRight: \"5px\" }} />\r\n        <a href=\"/\" style={{ padding: \"19px 5px\" }}>\r\n          Movies\r\n        </a>\r\n      </div>\r\n      <div className=\"menu__container\">\r\n        <div className=\"menu_left\">\r\n          <LeftMenu mode=\"horizontal\" />\r\n        </div>\r\n        <div className=\"menu_rigth\">\r\n          <RightMenu mode=\"horizontal\" />\r\n        </div>\r\n        <Button\r\n          className=\"menu__mobile-button\"\r\n          type=\"primary\"\r\n          onClick={showDrawer}\r\n        >\r\n          <Icon type=\"align-right\" />\r\n        </Button>\r\n        <Drawer\r\n          title=\"Basic Drawer\"\r\n          placement=\"right\"\r\n          className=\"menu_drawer\"\r\n          closable={false}\r\n          onClose={onClose}\r\n          visible={visible}\r\n        >\r\n          <LeftMenu mode=\"inline\" />\r\n          <RightMenu mode=\"inline\" />\r\n        </Drawer>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { Icon } from \"antd\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"80px\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        fontSize: \"1rem\",\r\n      }}\r\n    >\r\n      <p>\r\n        {\" \"}\r\n        Watch Movies <Icon type=\"smile\" />\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Icon } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { StarOutlined, StarFilled } from \"@ant-design/icons\";\r\n\r\nfunction Favorite(props) {\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const [FavoriteNumber, setFavoriteNumber] = useState(0);\r\n  const [Favorited, setFavorited] = useState(false);\r\n\r\n  const variable = {\r\n    userFrom: props.userFrom,\r\n    movieId: props.movieId,\r\n    movieTitle: props.movieInfo.original_title,\r\n    movieImage: props.movieInfo.backdrop_path,\r\n    movieRunTime: props.movieInfo.runtime,\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios.post(\"/api/favorite/favoriteNumber\", variable).then((res) => {\r\n      if (res.data.success) {\r\n        setFavoriteNumber(res.data.favoriteNumber);\r\n      } else {\r\n        alert(\"Failed to get Favorites Info\");\r\n      }\r\n    }, []);\r\n\r\n    // to check if already added to favorite\r\n    axios.post(\"/api/favorite/favorited\", variable).then((res) => {\r\n      if (res.data.success) {\r\n        setFavorited(res.data.favorited);\r\n      } else {\r\n        alert(\"Failed to get Favorites Info\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const onClickFavorite = () => {\r\n    if (user.userData && !user.userData.isAuth) {\r\n      return alert(\"Please Log in first\");\r\n    }\r\n\r\n    if (Favorited || FavoriteNumber > 0) {\r\n      // when already added\r\n      axios.post(\"/api/favorite/removeFromFavorite\", variable).then((res) => {\r\n        if (res.data.success) {\r\n          setFavoriteNumber(0);\r\n          setFavorited(!Favorited);\r\n          //console.log(FavoriteNumber, Favorited);\r\n        } else {\r\n          alert(\"Failed to remove from Favorites\");\r\n        }\r\n      });\r\n    } else if (FavoriteNumber === 0) {\r\n      // when not adding yet\r\n      axios.post(\"/api/favorite/addToFavorite\", variable).then((res) => {\r\n        if (res.data.success) {\r\n          setFavoriteNumber(FavoriteNumber + 1);\r\n          setFavorited(!Favorited);\r\n        } else {\r\n          alert(\"Failed to add to Favorites\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        onClick={onClickFavorite}\r\n        class=\"mdc-icon-button\"\r\n        aria-label=\"Add to favorites\"\r\n        aria-pressed=\"false\"\r\n      >\r\n        {FavoriteNumber !== 0 ? (\r\n          <StarFilled style={{ color: \"gold\", fontSize: \"20px\" }} />\r\n        ) : (\r\n          <StarOutlined style={{ color: \"red\", fontSize: \"15px\" }} />\r\n        )}\r\n      </Button>\r\n      <i class=\"icon-heart\"></i>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Favorite;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Tooltip, Icon } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction LikeDislikes(props) {\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const [Likes, setLikes] = useState(0);\r\n  const [Dislikes, setDislikes] = useState(0);\r\n  const [LikeAction, setLikeAction] = useState(null);\r\n  const [DislikeAction, setDislikeAction] = useState(null);\r\n  let variable = {};\r\n\r\n  if (props.video) {\r\n    variable = { videoId: props.videoId, userId: props.userId };\r\n  } else {\r\n    variable = { commentId: props.commentId, userId: props.userId };\r\n  }\r\n\r\n  useEffect(() => {\r\n    Axios.post(\"/api/like/getLikes\", variable).then((response) => {\r\n      //(\"getLikes\", response.data);\r\n\r\n      if (response.data.success) {\r\n        //How many likes does this video or comment have\r\n        setLikes(response.data.likes.length);\r\n\r\n        //if I already click this like button or not\r\n        response.data.likes.map((like) => {\r\n          if (like.userId === props.userId) {\r\n            setLikeAction(\"liked\");\r\n          }\r\n        });\r\n      } else {\r\n        alert(\"Failed to get likes\");\r\n      }\r\n    });\r\n\r\n    Axios.post(\"/api/like/getDislikes\", variable).then((response) => {\r\n      //console.log(\"getDislike\", response.data);\r\n      if (response.data.success) {\r\n        //How many likes does this video or comment have\r\n        setDislikes(response.data.dislikes.length);\r\n\r\n        //if I already click this like button or not\r\n        response.data.dislikes.map((dislike) => {\r\n          if (dislike.userId === props.userId) {\r\n            setDislikeAction(\"disliked\");\r\n          }\r\n        });\r\n      } else {\r\n        alert(\"Failed to get dislikes\");\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const onLike = () => {\r\n    if (user.userData && !user.userData.isAuth) {\r\n      return alert(\"Please Log in first\");\r\n    }\r\n\r\n    if (LikeAction === null) {\r\n      Axios.post(\"/api/like/upLike\", variable).then((response) => {\r\n        if (response.data.success) {\r\n          setLikes(Likes + 1);\r\n          setLikeAction(\"liked\");\r\n\r\n          //If dislike button is already clicked\r\n\r\n          if (DislikeAction !== null) {\r\n            setDislikeAction(null);\r\n            setDislikes(Dislikes - 1);\r\n          }\r\n        } else {\r\n          alert(\"Failed to increase the like\");\r\n        }\r\n      });\r\n    } else {\r\n      Axios.post(\"/api/like/unLike\", variable).then((response) => {\r\n        if (response.data.success) {\r\n          setLikes(Likes - 1);\r\n          setLikeAction(null);\r\n        } else {\r\n          alert(\"Failed to decrease the like\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const onDisLike = () => {\r\n    if (user.userData && !user.userData.isAuth) {\r\n      return alert(\"Please Log in first\");\r\n    }\r\n\r\n    if (DislikeAction !== null) {\r\n      Axios.post(\"/api/like/unDisLike\", variable).then((response) => {\r\n        if (response.data.success) {\r\n          setDislikes(Dislikes - 1);\r\n          setDislikeAction(null);\r\n        } else {\r\n          alert(\"Failed to decrease dislike\");\r\n        }\r\n      });\r\n    } else {\r\n      Axios.post(\"/api/like/upDisLike\", variable).then((response) => {\r\n        if (response.data.success) {\r\n          setDislikes(Dislikes + 1);\r\n          setDislikeAction(\"disliked\");\r\n\r\n          //If dislike button is already clicked\r\n          if (LikeAction !== null) {\r\n            setLikeAction(null);\r\n            setLikes(Likes - 1);\r\n          }\r\n        } else {\r\n          alert(\"Failed to increase dislike\");\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <span key=\"comment-basic-like\">\r\n        <Tooltip title=\"Like\">\r\n          <Icon\r\n            type=\"like\"\r\n            theme={LikeAction === \"liked\" ? \"filled\" : \"outlined\"}\r\n            onClick={onLike}\r\n          />\r\n        </Tooltip>\r\n        <span style={{ paddingLeft: \"8px\", cursor: \"auto\" }}>{Likes}</span>\r\n      </span>\r\n      &nbsp;&nbsp;&nbsp;&nbsp;\r\n      <span key=\"comment-basic-dislike\">\r\n        <Tooltip title=\"Dislike\">\r\n          <Icon\r\n            type=\"dislike\"\r\n            theme={DislikeAction === \"disliked\" ? \"filled\" : \"outlined\"}\r\n            onClick={onDisLike}\r\n          />\r\n        </Tooltip>\r\n        <span style={{ paddingLeft: \"8px\", cursor: \"auto\" }}>{Dislikes}</span>\r\n      </span>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default LikeDislikes;\r\n","import React, { useState } from \"react\";\r\nimport { Comment, Avatar, Button, Input } from \"antd\";\r\nimport Axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport LikeDislikes from \"./LikeDislikes\";\r\nconst { TextArea } = Input;\r\n\r\nfunction SingleComment(props) {\r\n  const user = useSelector((state) => state.user);\r\n  const [CommentValue, setCommentValue] = useState(\"\");\r\n  const [OpenReply, setOpenReply] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setCommentValue(e.currentTarget.value);\r\n  };\r\n\r\n  const openReply = () => {\r\n    setOpenReply(!OpenReply);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const variables = {\r\n      writer: user.userData._id,\r\n      movieId: props.movieId,\r\n      responseTo: props.comment._id,\r\n      content: CommentValue,\r\n    };\r\n\r\n    Axios.post(\"/api/comment/saveComment\", variables).then((response) => {\r\n      if (response.data.success) {\r\n        setCommentValue(\"\");\r\n        setOpenReply(!OpenReply);\r\n        props.refreshFunction(response.data.result);\r\n      } else {\r\n        alert(\"Failed to save Comment\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const actions = [\r\n    <LikeDislikes\r\n      comment\r\n      commentId={props.comment._id}\r\n      userId={localStorage.getItem(\"userId\")}\r\n    />,\r\n    <span onClick={openReply} key=\"comment-basic-reply-to\">\r\n      Reply to{\" \"}\r\n    </span>,\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Comment\r\n        actions={actions}\r\n        author={props.comment.writer.name}\r\n        avatar={<Avatar src={props.comment.writer.image} alt=\"image\" />}\r\n        content={<p>{props.comment.content}</p>}\r\n      ></Comment>\r\n\r\n      {OpenReply && (\r\n        <form style={{ display: \"flex\" }} onSubmit={onSubmit}>\r\n          <TextArea\r\n            style={{ width: \"100%\", borderRadius: \"5px\" }}\r\n            onChange={handleChange}\r\n            value={CommentValue}\r\n            placeholder=\"write some comments\"\r\n          />\r\n          <br />\r\n          <Button style={{ width: \"20%\", height: \"52px\" }} onClick={onSubmit}>\r\n            Submit\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SingleComment;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport SingleComment from \"./SingleComment\";\r\n\r\nfunction ReplyComment(props) {\r\n  const [ChildCommentNumber, setChildCommentNumber] = useState(0);\r\n  const [OpenReplyComments, setOpenReplyComments] = useState(false);\r\n  useEffect(() => {\r\n    let commentNumber = 0;\r\n    props.CommentLists.map((comment) => {\r\n      if (comment.responseTo === props.parentCommentId) {\r\n        commentNumber++;\r\n      }\r\n    });\r\n    setChildCommentNumber(commentNumber);\r\n  }, [props.CommentLists, props.parentCommentId]);\r\n\r\n  let renderReplyComment = (parentCommentId) =>\r\n    props.CommentLists.map((comment, index) => (\r\n      <React.Fragment>\r\n        {comment.responseTo === parentCommentId && (\r\n          <div style={{ width: \"80%\", marginLeft: \"40px\" }}>\r\n            <SingleComment\r\n              comment={comment}\r\n              movieId={props.movieId}\r\n              refreshFunction={props.refreshFunction}\r\n            />\r\n            <ReplyComment\r\n              CommentLists={props.CommentLists}\r\n              parentCommentId={comment._id}\r\n              movieId={props.movieId}\r\n              refreshFunction={props.refreshFunction}\r\n            />\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    ));\r\n\r\n  const handleChange = () => {\r\n    setOpenReplyComments(!OpenReplyComments);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {ChildCommentNumber > 0 && (\r\n        <p\r\n          style={{\r\n            fontSize: \"14px\",\r\n            margin: 0,\r\n            color: \"gray\",\r\n            cursor: \"pointer\",\r\n          }}\r\n          onClick={handleChange}\r\n        >\r\n          &nbsp; View {ChildCommentNumber} more comment(s)\r\n        </p>\r\n      )}\r\n\r\n      {OpenReplyComments && renderReplyComment(props.parentCommentId)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReplyComment;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Input, Typography } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SingleComment from \"./SingleComment\";\r\nimport ReplyComment from \"./ReplyComment\";\r\nconst { TextArea } = Input;\r\nconst { Title } = Typography;\r\nfunction Comments(props) {\r\n  const user = useSelector((state) => state.user);\r\n  const [Comment, setComment] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setComment(e.currentTarget.value);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (user.userData && !user.userData.isAuth) {\r\n      return alert(\"Please Log in first\");\r\n    }\r\n\r\n    const variables = {\r\n      content: Comment,\r\n      writer: user.userData._id,\r\n      movieId: props.movieId,\r\n    };\r\n    console.log(variables);\r\n\r\n    axios.post(\"/api/comment/saveComment\", variables).then((response) => {\r\n      if (response.data.success) {\r\n        setComment(\"\");\r\n        props.refreshFunction(response.data.result);\r\n      } else {\r\n        alert(\"Failed to save Comment\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <br />\r\n      <Title level={3}> Share your opinions about {props.movieTitle} </Title>\r\n      <hr />\r\n      {/* Comment Lists  */}\r\n      {console.log(props.CommentLists)}\r\n\r\n      {props.CommentLists &&\r\n        props.CommentLists.map(\r\n          (comment, index) =>\r\n            !comment.responseTo && (\r\n              <React.Fragment>\r\n                <SingleComment\r\n                  comment={comment}\r\n                  movieId={props.movieId}\r\n                  refreshFunction={props.refreshFunction}\r\n                />\r\n                <ReplyComment\r\n                  CommentLists={props.CommentLists}\r\n                  movieId={props.movieId}\r\n                  parentCommentId={comment._id}\r\n                  refreshFunction={props.refreshFunction}\r\n                />\r\n              </React.Fragment>\r\n            )\r\n        )}\r\n\r\n      {props.CommentLists && props.CommentLists.length === 0 && (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            height: \"200px\",\r\n          }}\r\n        >\r\n          Be the first one who shares your thought about this movie\r\n        </div>\r\n      )}\r\n\r\n      {/* Root Comment Form */}\r\n      <form style={{ display: \"flex\" }} onSubmit={onSubmit}>\r\n        <TextArea\r\n          style={{ width: \"100%\", borderRadius: \"5px\" }}\r\n          onChange={handleChange}\r\n          value={Comment}\r\n          placeholder=\"write some comments\"\r\n        />\r\n        <br />\r\n        <Button style={{ width: \"20%\", height: \"52px\" }} onClick={onSubmit}>\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comments;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { API_URL, API_KEY, IMAGE_URL } from \"../../Config\";\r\nimport MainImage from \"../LandingPage/Sections/MainImage\";\r\n\r\nimport GridCard from \"../LandingPage/Sections/GridCard\";\r\n\r\nimport { Descriptions, Button, Row } from \"antd\";\r\nimport Favorite from \"./Sections/Favorite\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport Comments from \"./Sections/Comments\";\r\nimport LikeDislikes from \"./Sections/LikeDislikes\";\r\n\r\nfunction MovieDetailPage(props) {\r\n  const movieId = props.match.params.movieId; // getting the movieId from URL parameters\r\n\r\n  const [Movie, setMovie] = useState([]);\r\n  const [Crews, setCrews] = useState([]);\r\n  const [ActorToggle, setActorToggle] = useState(false);\r\n\r\n  const [CommentLists, setCommentLists] = useState([]);\r\n  const [LoadingForMovie, setLoadingForMovie] = useState(true);\r\n  const [LoadingForCasts, setLoadingForCasts] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let endpointForMovieInfo = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\r\n    fetchDetailInfo(endpointForMovieInfo);\r\n\r\n    axios\r\n      .post(\"/api/comment/getComments\", { movieId: movieId })\r\n      .then((response) => {\r\n        //console.log(response.data);\r\n        if (response.data.success) {\r\n          // console.log(\"response.data.comments\", response.data.comments);\r\n          setCommentLists(response.data.comments);\r\n        } else {\r\n          alert(\"Failed to get comments Info\");\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []);\r\n\r\n  const fetchDetailInfo = (endpoint) => {\r\n    fetch(endpoint)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        // console.log(res);\r\n        setMovie(res);\r\n        setLoadingForMovie(false);\r\n\r\n        // for crew members\r\n        fetch(`${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`)\r\n          .then((res) => res.json())\r\n          .then((res) => {\r\n            //console.log(res);\r\n            setCrews(res.cast);\r\n          });\r\n        setLoadingForCasts(false);\r\n      });\r\n  };\r\n\r\n  const updateComment = (newComment) => {\r\n    setCommentLists(CommentLists.concat(newComment));\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setActorToggle(!ActorToggle);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!LoadingForMovie ? (\r\n        Movie && (\r\n          <MainImage\r\n            image={`${IMAGE_URL}w1280${\r\n              Movie.backdrop_path && Movie.backdrop_path\r\n            }`}\r\n            title={Movie.original_title}\r\n            text={Movie.overview}\r\n          />\r\n        )\r\n      ) : (\r\n        <div>Loading...</div>\r\n      )}\r\n\r\n      {/* Body */}\r\n      <div style={{ width: \"85%\", margin: \"1rem auto\" }}>\r\n        <div style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n          {/* if logged in userId is stored in local storage */}\r\n          <Favorite\r\n            userFrom={localStorage.getItem(\"userId\")}\r\n            movieId={movieId}\r\n            movieInfo={Movie}\r\n          />\r\n        </div>\r\n\r\n        {/* Movie Info Table */}\r\n        {!LoadingForMovie ? (\r\n          <Descriptions title=\"Movie Info\" bordered>\r\n            <Descriptions.Item label=\"Title\">\r\n              {Movie.original_title}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"release_date\">\r\n              {Movie.release_date}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"revenue\">\r\n              {Movie.revenue}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"runtime\">\r\n              {Movie.runtime}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"vote_average\" span={2}>\r\n              {Movie.vote_average}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"vote_count\">\r\n              {Movie.vote_count}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"status\">{Movie.status}</Descriptions.Item>\r\n            <Descriptions.Item label=\"popularity\">\r\n              {Movie.popularity}\r\n            </Descriptions.Item>\r\n          </Descriptions>\r\n        ) : (\r\n          <div>Loading...</div>\r\n        )}\r\n      </div>\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <Button onClick={handleClick}> Toggle Actor View</Button>\r\n      </div>\r\n      <br />\r\n\r\n      {/* Grid card for crews */}\r\n      {ActorToggle && (\r\n        <Row gutter={[16, 16]}>\r\n          {!LoadingForCasts ? (\r\n            Crews &&\r\n            Crews.map((crew, index) => (\r\n              <React.Fragment key={index}>\r\n                {crew.profile_path && (\r\n                  <GridCard\r\n                    actor\r\n                    image={`${IMAGE_URL}w500${crew.profile_path}`}\r\n                    alt={crew.character}\r\n                  />\r\n                )}\r\n              </React.Fragment>\r\n            ))\r\n          ) : (\r\n            <div>loading...</div>\r\n          )}\r\n        </Row>\r\n      )}\r\n\r\n      {/* Comments */}\r\n      <br />\r\n\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <LikeDislikes\r\n          video\r\n          videoId={movieId}\r\n          userId={localStorage.getItem(\"userId\")}\r\n        />\r\n      </div>\r\n\r\n      {/* Comments */}\r\n      <Comments\r\n        movieTitle={Movie.original_title}\r\n        CommentLists={CommentLists}\r\n        movieId={movieId}\r\n        refreshFunction={updateComment}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieDetailPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./favorite.css\";\r\nimport Axios from \"axios\";\r\nimport { Popover } from \"antd\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IMAGE_URL } from \"../../Config\";\r\n\r\nfunction FavoritePage() {\r\n  const user = useSelector((state) => state.user);\r\n\r\n  let variables = { userFrom: localStorage.getItem(\"userId\") };\r\n\r\n  const [FavoritedMovies, setFavoritedMovies] = useState([]);\r\n  const [Loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchFavoredMovie();\r\n  }, []);\r\n\r\n  const fetchFavoredMovie = () => {\r\n    Axios.post(\"/api/favorite/getFavoritedMovie\", variables).then((res) => {\r\n      if (res.data.success) {\r\n        // console.log(res.data.favorites);\r\n        setFavoritedMovies(res.data.favorites);\r\n        setLoading(false);\r\n      } else {\r\n        alert(\"Failed to get favorited videos\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const onClickRemove = (movieId, userFrom) => {\r\n    const variables = {\r\n      movieId: movieId,\r\n      userFrom: userFrom,\r\n    };\r\n\r\n    Axios.post(\"/api/favorite/removeFromFavorite\", variables).then(\r\n      (response) => {\r\n        if (response.data.success) {\r\n          fetchFavoredMovie(); // to re render\r\n        } else {\r\n          alert(\"Failed to Remove From Favorite\");\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  const renderTableBody = FavoritedMovies.map((favorite, index) => {\r\n    //console.log(`${IMAGE_URL}w500${favorite.movieImage}`);\r\n    const content = (\r\n      <div>\r\n        {favorite.movieImage ? (\r\n          <img src={`${IMAGE_URL}w500${favorite.movieImage}`} />\r\n        ) : (\r\n          \"no image\"\r\n        )}\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <tr key={index}>\r\n        <Popover content={content} title={`${favorite.movieTitle}`}>\r\n          <td>{favorite.movieTitle}</td>\r\n        </Popover>\r\n\r\n        <td>{favorite.movieRunTime} mins</td>\r\n        <td>\r\n          <button\r\n            onClick={() => onClickRemove(favorite.movieId, favorite.userFrom)}\r\n          >\r\n            {\" \"}\r\n            Remove{\" \"}\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div style={{ width: \"85%\", margin: \"3rem auto\" }}>\r\n      <h3>Favorite Movies By Me</h3>\r\n      <hr />\r\n\r\n      {user.userData && !user.userData.isAuth ? (\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            fontSize: \"2rem\",\r\n            height: \"500px\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <p>Please Log in first...</p>\r\n          <a href=\"/login\">Go to Login page</a>\r\n        </div>\r\n      ) : (\r\n        !Loading && (\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Movie Title</th>\r\n                <th>Movie Runtime</th>\r\n                <th>Remove</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>{renderTableBody}</tbody>\r\n          </table>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FavoritePage;\r\n","import React, { Suspense } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"../hoc/auth\";\r\n// pages for this product\r\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\r\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\r\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\r\nimport NavBar from \"./views/NavBar/NavBar\";\r\nimport Footer from \"./views/Footer/Footer\";\r\nimport MovieDetailPage from \"./views/MovieDetailPage/MovieDetailPage\";\r\nimport FavoritePage from \"./views/FavoritePage/FavoritePage\";\r\n\r\n//null   Anyone Can go inside\r\n//true   only logged in user can go inside\r\n//false  logged in user can't go inside\r\n\r\nfunction App() {\r\n  return (\r\n    <Suspense fallback={<div>Loading...</div>}>\r\n      <NavBar />\r\n      <div style={{ paddingTop: \"69px\", minHeight: \"calc(100vh - 80px)\" }}>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\r\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\r\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\r\n          <Route\r\n            exact\r\n            path=\"/movie/:movieId\"\r\n            component={Auth(MovieDetailPage, null)}\r\n          />\r\n          <Route exact path=\"/favorite\" component={Auth(FavoritePage, null)} />\r\n        </Switch>\r\n      </div>\r\n      <Footer />\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport user from './user_reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    user,\r\n});\r\n\r\nexport default rootReducer;","import {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    AUTH_USER,\r\n    LOGOUT_USER,\r\n} from '../_actions/types';\r\n \r\n\r\nexport default function(state={},action){\r\n    switch(action.type){\r\n        case REGISTER_USER:\r\n            return {...state, register: action.payload }\r\n        case LOGIN_USER:\r\n            return { ...state, loginSucces: action.payload }\r\n        case AUTH_USER:\r\n            return {...state, userData: action.payload }\r\n        case LOGOUT_USER:\r\n            return {...state }\r\n        default:\r\n            return state;\r\n    }\r\n}","import 'react-app-polyfill/ie9';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'core-js';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport Reducer from './_reducers';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport promiseMiddleware from 'redux-promise';\r\nimport ReduxThunk from 'redux-thunk';\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\r\n\r\nReactDOM.render(\r\n    <Provider\r\n        store={createStoreWithMiddleware(\r\n            Reducer,\r\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n            window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        )}\r\n    >\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}